<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="listener">

	<select id="selectByEmail" parameterType="string" resultType="ListenerVo">
	<![CDATA[
		select email
		from tb_listener
	    where email = #{email}
	]]>
	</select>
	
	<select id="selectByEmailAndPassword" parameterType="map" resultType="ListenerVo">
	<![CDATA[
		select email, nickname, password
		from tb_listener
		where email=#{email} and password=#{password}
	]]>
	</select>
	
	<insert id="insert" parameterType="ListenerVo">
	<![CDATA[		
		insert
		into tb_listener
		(email, password, nickname, consulting_topic)
		values (#{email}, #{password}, #{nickname}, #{consulting_topic})	
	]]>
	</insert>
	
	<update id="update" parameterType="ListenerVo">
	<![CDATA[		
		update tb_listener
		set password=#{password}, nickname=#{nickname}, consulting_topic=#{consulting_topic}
		where email=#{email}
	]]>
	</update>
	
	<delete id="delete" parameterType="String">
	<![CDATA[		
		delete from tb_listener
		where email=#{email}
	]]>
	</delete>

	<select id="listPage" resultType="ListenerVo">
	<![CDATA[
		select email, nickname, consulting_topic
		from tb_listener
		where nickname limit #{page}, 10
	]]>
	</select>
	
	<select id="listCriteria" parameterType="Criteria" resultType="ListenerVo">
	<![CDATA[
		select email, nickname, consulting_topic
		from tb_listener
		order by nickname desc
		limit #{pageStart}, #{perPageNum}
	]]>
	</select>
	
	<select id="countPaging" resultType="int">
	<![CDATA[
		select count(EMAIL) from tb_listener
	]]>
	</select>
	
	<select id="listSearch" resultType="ListenerVo">
	<![CDATA[
		select * from tb_listener
	]]>
	<include refid="search"></include>
	<include refid="search_score"></include>	
	<![CDATA[
		limit #{pageStart}, #{perPageNum}
	]]>
	</select>
	
	<select id="listSearchCount" resultType="int">
	<![CDATA[
		select count(EMAIL) from tb_listener
	]]>
	<include refid="search"></include>
	</select>

	<sql id="search">
		<if test="searchType != null">
			<!-- 상담주제 -->
			<if test="searchType == 'job'.toString()">
				where consulting_topic like CONCAT('%', '직장문제', '%')
			</if>
			<if test="searchType == 'school'.toString()">
				where consulting_topic like CONCAT('%', '학교문제', '%')
			</if>
			<if test="searchType == 'course'.toString()">
				where consulting_topic like CONCAT('%', '진로상담', '%')
			</if>
			<if test="searchType == 'smoke'.toString()">
				where consulting_topic like CONCAT('%', '금주/금연', '%')
			</if>
			<if test="searchType == 'finance'.toString()">
				where consulting_topic like CONCAT('%', '재정문제', '%')
			</if>
			<if test="searchType == 'diet'.toString()">
				where consulting_topic like CONCAT('%', '다이어트', '%')
			</if>
			<if test="searchType == 'reason'.toString()">
				where consulting_topic like CONCAT('%', '이성문제', '%')
			</if>
			<if test="searchType == 'etc'.toString()">
				where consulting_topic like CONCAT('%', '기타', '%')
			</if>
		</if>
	</sql>
	
	<sql id="search_score">
		<if test="searchType_score != null">
			<!-- 평점 -->
			<if test="searchType_score == 'high'.toString()">
				order by score desc
			</if>
			<if test="searchType_score == 'low'.toString()">
				order by score asc
			</if>
		</if>
	</sql>
	
	<update id="update_score" parameterType="map">
		<![CDATA[
		update tb_listener
		set score=#{score}
		where email=#{email}
		]]>
	</update>
</mapper>