<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatroom">
	<select id="selectByIdx" parameterType="String" resultType="ChatroomVo">
		<![CDATA[
		select *
		from tb_chatroom
		where idx=#{idx}
		]]>
	</select>
	
	<select id="selectByTalkerAndListener" parameterType="map" resultType="ChatroomVo">
		<![CDATA[
		select *
		from tb_chatroom
		where talker_email=#{talker_email} AND listener_email=#{listener_email}
		]]>
	</select>
	
	<insert id="insert" parameterType="map">
		<![CDATA[		
		insert 
		into tb_chatroom
		(talker_email, talker_nickname, listener_email, listener_nickname) 
		values (#{talker_email}, #{talker_nickname}, #{listener_email}, #{listener_nickname})	
		]]>
	</insert>
	
	<select id="selectChatroomListByTalker" parameterType="string" resultType="ChatroomVo">
		<![CDATA[ 
		select *
		from tb_chatroom
		where talker_email=#{talker_email}
		order by last_chat_time is null ASC, last_chat_time DESC
		]]>
	</select>
	
	<select id="selectListenerRequestChatroom" parameterType="string" resultType="map">
		<![CDATA[
		select tb_chatroom.IDX, tb_chatroom.TALKER_EMAIL, tb_chatroom.TALKER_NICKNAME, tb_chatroom.LISTENER_EMAIL, tb_chatroom.LISTENER_NICKNAME, tb_talker.CONSULTING_TOPIC
		from tb_chatroom 
		left outer join tb_talker on tb_chatroom.TALKER_EMAIL=tb_talker.EMAIL
		where (tb_chatroom.LISTENER_EMAIL = #{listener_email} && listener_response=0)
		]]>
	</select>
	
	<update id="updateListenerResponse" parameterType="String">
		<![CDATA[
		update
		tb_chatroom
		set listener_response=1
		where idx=#{idx}
		]]>
	</update>
	
	<select id="selectChatroomListByListener" parameterType="string" resultType="ChatroomVo">
		<![CDATA[ 
		select *
		from tb_chatroom
		where listener_email=#{listener_email} and listener_response=1
		order by last_chat_time is null ASC, last_chat_time DESC
		]]>
	</select>
	
		<select id="listPage" resultType="map">
		<![CDATA[
			select tb_chatroom.IDX, tb_chatroom.TALKER_EMAIL, tb_chatroom.TALKER_NICKNAME, tb_chatroom.LISTENER_EMAIL, tb_chatroom.LISTENER_NICKNAME, tb_talker.CONSULTING_TOPIC
			from tb_chatroom 
			left outer join tb_talker on tb_chatroom.TALKER_EMAIL=tb_talker.EMAIL
			where (tb_chatroom.LISTENER_EMAIL = #{listener_email} && listener_response=0)
			limit #{page}, 10
		]]>
	</select>
	
	<select id="listCriteria" parameterType="map" resultType="map">
		<![CDATA[
			select tb_chatroom.IDX, tb_chatroom.TALKER_EMAIL, tb_chatroom.TALKER_NICKNAME, tb_chatroom.LISTENER_EMAIL, tb_chatroom.LISTENER_NICKNAME, tb_talker.CONSULTING_TOPIC
			from tb_chatroom 
			left outer join tb_talker on tb_chatroom.TALKER_EMAIL=tb_talker.EMAIL
			where (tb_chatroom.LISTENER_EMAIL = #{listener_email} && listener_response=0)
			limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<select id="countPaging" parameterType="string" resultType="int">
		<![CDATA[
			select count(tb_chatroom.IDX)
			from tb_chatroom 
			left outer join tb_talker on tb_chatroom.TALKER_EMAIL=tb_talker.EMAIL
			where (tb_chatroom.LISTENER_EMAIL = #{listener_email} && tb_chatroom.listener_response=0 && tb_chatroom.IDX > 0)
		]]>
	</select>
		
	<update id="updateChatTime" parameterType="string">
		<![CDATA[
			update
			tb_chatroom
			set last_chat_time = CURRENT_TIMESTAMP
			where idx=#{chatroom_idx}
		]]>
	</update>
	
	<update id="updateChatUserNick" parameterType="map">
		<![CDATA[
			update
			tb_chatroom
		]]>
		<include refid="userType"></include>
	</update>
	
	<sql id="userType">
		<if test="userType == 'talker'.toString()">
			set talker_nickname = #{talker_nickname}
			where talker_email = #{talker_email}
		</if>
		<if test="userType == 'listener'.toString()">
			set listener_nickname = #{listener_nickname}
			where listener_email = #{listener_email}
		</if>
	</sql>
</mapper>